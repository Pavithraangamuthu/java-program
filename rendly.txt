import java.io.*;
import java.util.*;
import java.lang.String;
public class Main{
public static void main(String args[]){

String temptime=new String();
String tempnumber=new String();
String temp_time_in_map=new String();
String temp=new String();
String date=new String();
String str2="",str1;
char[] original_time=new char[10];
int i,k,p,j=0,q=1,original_map_size=0,extra_time=0,time,l=0;
int[] cost=new int[100];
String[] ph_number=new String[10];
int f=0,n;
HashMap<String,String> hm=new HashMap<String,String>();
String[] log=new String[100];
String duration_in_log;
int check;

       
        Scanner s=new Scanner(System.in);
        n=s.nextInt();
        if(n>=1&&n<=100){
          for(i=0;i<n;i++){
            log[i]=s.next();
            check=0;
               
                if(log[i].charAt(2)!=':'||log[i].charAt(5)!=':'){
                    System.out.println("Enter the format in hh:mm:ss");
                    System.out.println("Renter the correct log : ");
                    check=1;
                    
                }
                else if((Integer.parseInt(log[i].substring(0,2)))>=99){
                    System.out.println("Enter hour within 99");
                    System.out.println("Renter the correct "+(i+1)+" log : ");
                    check=1;
               }
               else if((Integer.parseInt(log[i].substring(3,5)))>=59){
                    System.out.println("Enter min within 59");
                    System.out.println("Renter the correct "+(i+1)+" log : ");
                    check=1;
               }
               else  if(Integer.parseInt(log[i].substring(6,8))>=59){
                    System.out.println("Enter sec within 59");
                    System.out.println("Renter the correct "+(i+1)+" log : ");
                    check=1;
               }
                else if(log[i].charAt(8)!=','||(log[i].substring(9,12)).length()!=3||log[i].charAt(12)!='-'||(log[i].substring(13,16)).length()!=3||(log[i].substring(17,20)).length()!=3||log[i].charAt(12)!='-'){
                    System.out.println("Enter valid phone number in nnn-nnn-nnn format");
                    System.out.println("Renter the correct "+(i+1)+" log : ");
                    check=1;
                }
                if(check==1)
                i--;
        }
        for(i=0;i<n;i++){
                temptime=log[i].substring(0,8);
                tempnumber=log[i].substring(9,12)+log[i].substring(13,16)+log[i].substring(17,log[i].length());
                
                int min=Integer.parseInt(temptime.substring(3,5));
                int hour=Integer.parseInt(temptime.substring(0,2));
                int sec=Integer.parseInt(temptime.substring(6,temptime.length()));

                ph_number[f]=tempnumber;
                if(min<5&&hour==0){
                      min=min*60;
                      min=min+sec;
                      cost[f]=min*3;
                      f++;
                }
                else if(min>=5){
                      hour=hour*60;
                      if(sec!=0)
                      min=min+1;
                      min=min+hour;
                      cost[f]=150*min;
                      f++;
                }
                hm.putIfAbsent(tempnumber,temptime);

int size_of_map=hm.size();
l=7;
int count=0;

                if(original_map_size==size_of_map){
                    for(Map.Entry w:hm.entrySet()){
                        temp=(String)w.getKey();
    
                              if(temp.equals(tempnumber)){
                                    temp_time_in_map=(String)w.getValue();
   
                                    for(int e=(temp.length())-1;e>=0;e-=3){
                                        int addtime=Integer.parseInt(temp_time_in_map.substring((e-2),e))+Integer.parseInt(temptime.substring((e-2),e));   
                                        addtime=addtime+extra_time;
                                        count++;
   
                                            if(addtime>60&&count<3){
                                                 time=addtime-60;
                                                 extra_time=addtime/60;
                                            }
                                            else{
                                                 time=addtime;
                                            }
  
                                         date=String.valueOf(time);
                                         str1=temp_time_in_map.substring(0,l-1);
                                
                                            if(l+2<=6){
                                                  str2=temp_time_in_map.substring(l+1,temp_time_in_map.length()); 
                                            }
                                        
                                        l=l-3;
                                        temp_time_in_map=str1+date+str2;
                                    }
                                    hm.replace((String)(w.getKey()),temp_time_in_map);
  
                                }
                                else{
                                   //System.out.println("not equal");
                                } 
    
                    }
  
                }
                else{
                  original_map_size=size_of_map;
                }
            
            q++;
            j=i+2;
        }

int[][] duration=new int[100][10];
int order=0;
String final_map_time_string;
String appendstring="";
        for(Map.Entry w:hm.entrySet()){
            final_map_time_string=(String)w.getValue();
            String[] final_map_time_char=final_map_time_string.split(":"); 
            
                for(i=0;i<final_map_time_char.length;i++){
                    duration[order][i]=Integer.parseInt(final_map_time_char[i]);
                }  
         
            order++;
   
        }
int[] total_cost=new int[100];
int max,index1=0;
int[] index2=new int[100];

        for(i=0;i<order;i++){
            max=0;
          for(j=0;j<3;j++){
              if(j==0){
                    max+=duration[i][j]*60*60;
              }
              if(j==1){
              max+=duration[i][j]*60;
              }
              if(j==2){
              max+=duration[i][j];
              }
          }
          total_cost[i]=max;
        }
  
        
int max1;
        max1=total_cost[0];
        
        for(i=1;i<order;i++){
            if(max1<total_cost[i]){
                max1=total_cost[i];
                index1=i;
            }
        }
  
        for(i=0;i<order;i++)
             index2[i]=-1;
 
int array_count=0;

        for(i=0;i<order;i++){

            if(max1==total_cost[i]&&index1!=i){
                index2[array_count]=i;
                array_count++;
            }
    
        }
        
 
String delete_number="";
String final_map_number_string1="";
String final_map_number_string2="";
 int te=0;
   
        for(Map.Entry w:hm.entrySet()){
            
            if(index1>=te){
                te++;
                final_map_number_string1=(String)w.getKey();
            }
        }
        
        long large_number1=Long.parseLong(final_map_number_string1);
        
            if(array_count!=0){
                for(i=0;i<array_count;i++){
                    te=0;
                        for(Map.Entry w:hm.entrySet()){
                            if(index2[i]>=te){
                                te++;
                                final_map_number_string2=(String)w.getKey();
                            }
     
                        }
     
       long large_number2=Long.parseLong(final_map_number_string2);

                if(large_number2>large_number1)
                    delete_number=final_map_number_string1;
                else
                    delete_number=final_map_number_string2;
      
        large_number1=Long.parseLong(delete_number);
                }
            }
            else{
                large_number1=Long.parseLong(final_map_number_string1);
                delete_number=final_map_number_string1;
            }
int total_bill=0;

//System.out.println("Delete no: "+delete_number);
    
        for(i=0;i<f;i++){
            if(!ph_number[i].equals(delete_number)){
          
                total_bill=total_bill+cost[i]; 
  
            }
   
        }

            System.out.println("Total bill : "+total_bill);
        }
else{
    System.out.println("Invalid value Enter 1 to 100 ");
}
}
}